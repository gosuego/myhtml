<address></address>

inline 
한줄에 올 수 있다.
span link img

block
옆에 아무것도 올 수 없다. 

<span>block</span>
margin
space
자동으로 생긴 공간
body{
margin:0;
}

div{
maigin-left:50px;
}

padding

border 보통 1가지만 쓴다.
border style mdn/검색

*{
/*전체를 적용한다.*/
border: 1px dashed black;  
}

class
요소를 가리킬 수 있으면서 겹칠 수 있는 것 그게 클래스이다.

(.) =class
(#) = id 

display: block;
inline/none/block

flexbox
flex를 먼저 명시해주어야한다. 
flex container
 display: flex;
 rule 1 
 자식에게 명시하지 않고 부모에게 명시한다.
 자식 태그가 아닌 부모태그에 display:flex;를 한다.
 justify-content: center;  --main axis
 /space-evenly 
 align-items: center;  --cross axis
 
 justify-content: center; /*행*/
        align-items: center; /*열*/
 얼마나 빈공간을 줄지 이런 것들을 자동으로 계산해준다.
 rule2
 주축(main axis)과 교차축(cross axis)
(defult) 주축은 수평이고 교차축은 수직이다.

flexbox는 박스를 배열하는데 유용하다.

tip
만약 body가 height값을 가지고 있지 않다면 align-items: center;를 설정하더라도 바뀌지 않을 것이다.
이미 맨 위아래를 차지하고 중심에 있기 때문에 이런 경우에는 body에 height값을 넣어주면 된다. 
--vh(viewport height) 화면의 크기마다 다 다르게 적용

2017 최신의 방법 그리드
부모태그에 입력
flex 플럭스 -> 그리드
 grid-template-columns: 150px 1fr; --1fr 남아있는 공간을 씀 화면 전체를 자동으로 쓰게 만듬



 최신기능을 사용할지 안 할지를 판단하기 위해서는 데이터에 근거해서 판단할 필요가 있다.

 검색
 tag검색 ~mdn
 can i use 현재 사용하고 있는 기능 통계 서비스

 우리가 배운 것을 써 먹어보자. 

 position은 레이아웃보다는 위치를 아주 조금 위로, 아주 조금 오른쪽으로 
 옮기고 싶을 때 사용하는 것이다. 
 default= static
top
 left
 right
 bottom
 
 posittion : fixed;
 선택자의 위치가 고정되어 있다. 

 * position: relative;
 top
 left
 width
엘리먼트가 처음 놓인 자리에서 상하좌우로 움직인다. 


 * position: absolute;
        top: 0px;
        right: 0px;
        width: 100px;
부모가 absolute일 때 부모를 기준으로 원하는 좌표대로 옮길 수 있다. 
top과 bottom 박스를 기준으로 옯겨진다.

pseudo selectors

first-child와 last-child를 선택할 수 있다.
이렇게 하는 것이 class나 div를 만드는 것보다 훨씬 좋은 방법이다.
HTML코드를 건들지 않고 CSS로만으로 바꿀 수 있다. 
nth-child()
odd(홀수)
even(짝수)
n+1 n에 다른 모든 숫자를 대입 할 수 있다.

div > span{
바로 밑에 자식 선택
}
p + span{
p 다음에 오는 형제 span을 선택
}

P ~ span {
p의 형제인데 바로 뒤에 오지 않을 때 쓸 수 있는게 바로 ~이다.
}
  